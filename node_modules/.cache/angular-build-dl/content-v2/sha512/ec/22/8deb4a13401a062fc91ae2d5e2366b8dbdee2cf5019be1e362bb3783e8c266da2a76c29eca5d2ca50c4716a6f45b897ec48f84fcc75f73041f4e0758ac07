{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/alvara.service.ts","./src/app/alvara/alvara-lista/alvara-lista.component.ts","./src/app/alvara/alvara-lista/alvara-lista.component.html","./src/app/alvara/alvara-routing.module.ts","./src/app/alvara/alvara.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/preferencias/preferencias-form/preferencias-form.component.ts","./src/app/preferencias/preferencias-form/preferencias-form.component.html","./src/app/preferencias/preferencias-routing.module.ts","./src/app/preferencias/preferencias.module.ts","./src/app/template/cabecalho/cabecalho.component.ts","./src/app/template/cabecalho/cabecalho.component.html","./src/app/template/menu/menu.component.ts","./src/app/template/menu/menu.component.html","./src/app/template/rodape/rodape.component.ts","./src/app/template/rodape/rodape.component.html","./src/app/template/template.module.ts","./src/app/token.interceptor.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AlvaraPaginator } from './alvara/alvaraPaginator';\n\nconst API_URL = 'http://192.168.1.253:8085/api/alvara';\n\n@Injectable({ providedIn: 'root' })\nexport class AlvaraService {\n\n  constructor(private http: HttpClient) { }\n\n\n  uploadPdf(formData: FormData): Observable<any> {\n    return this.http.post(API_URL + '/pdf', formData, { responseType: 'blob' });\n  }\n\n\n  listarTodos(page, size): Observable<AlvaraPaginator> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size)\n    return this.http.get<any>(API_URL + \"?\" + params.toString());\n  }\n\n  listarPorNome(page, size, nome): Observable<AlvaraPaginator> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size)\n      .set(\"nome\", nome)\n    return this.http.get<any>(API_URL + \"/nome?\" + params.toString());\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlvaraService } from 'src/app/alvara.service';\nimport { Alvara } from '../alvara';\n\nimport { Router } from '@angular/router';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PageEvent } from '@angular/material/paginator';\n\n\n@Component({\n  selector: 'app-alvara-lista',\n  templateUrl: './alvara-lista.component.html',\n  styleUrls: ['./alvara-lista.component.css']\n})\nexport class AlvaraListaComponent implements OnInit {\n\n  mostraProgresso: boolean = true;\n\n  totalElementos = 0;\n  pagina;\n  tamanho;\n  pageSizeOptions: number[] = [10];\n  //\n  nome: string = \"\";\n\n\n  lista: Alvara[] = [];\n  colunas = ['id', 'tipoDoc', 'nomeArquivo',\n    'numeroAlvara', 'nomeEmpresa',\n    'cnpjEmpresa', 'dataEmissao', 'dataVencimento', 'expira', 'pdf'];\n\n  constructor(\n    private router: Router,\n    private service: AlvaraService,\n    private snackBar: MatSnackBar\n  ) { \n    \n  }\n\n  ngOnInit(): void {\n    this.listarArquivos();\n    this.mostraProgresso = true;\n  }\n\n\n  listarArquivos(pagina = 0, tamanho = 10) {\n    this.service.listarTodos(pagina, tamanho)\n      .subscribe(resposta => {\n        this.lista = resposta.content;\n        this.totalElementos = resposta.totalElements;\n        this.pagina = resposta.number;\n\n        if (this.lista.length == 0) {\n          this.snackBar.open(\"Lista Vazia!\", \"Info!\", {\n            duration: 2000\n          });\n        }\n      }, responseError => {\n\n        console.log(responseError);\n        this.snackBar.open(\"Erro ao Obter Lista!\", \"ERRO!\", {\n          duration: 2000\n        });\n\n      });\n  }\n\n  paginar(event: PageEvent) {\n    this.pagina = event.pageIndex;\n    this.listarArquivos(this.pagina, this.tamanho);\n  }\n\n\n  consultarAlvaraPorNome(pagina = 0, tamanho = 10) {\n    this.service.listarPorNome(pagina, tamanho, this.nome)\n      .subscribe(resposta => {\n        this.lista = resposta.content;\n        this.totalElementos = resposta.totalElements;\n        this.pagina = resposta.number;\n\n        if (this.lista.length == 0) {\n          this.snackBar.open(\"Lista Vazia!\", \"Info!\", {\n            duration: 2000\n          });\n        }\n      }, errorResponse => {\n        console.log(errorResponse);\n        this.snackBar.open(\"Erro ao Obter Lista!\", \"ERRO!\", {\n          duration: 2000\n        });\n\n      }\n      );\n  }\n\n  baixar(alvara: Alvara) {\n    var sampleArr = this.base64ToArrayBuffer(alvara.pdf);\n    this.saveByteArray(alvara.nomeArquivo, sampleArr);\n  }\n\n  base64ToArrayBuffer(base64) {\n    var binaryString = window.atob(base64);\n    var binaryLen = binaryString.length;\n    var bytes = new Uint8Array(binaryLen);\n    for (var i = 0; i < binaryLen; i++) {\n      var ascii = binaryString.charCodeAt(i);\n      bytes[i] = ascii;\n    }\n    return bytes;\n  }\n\n  saveByteArray(reportName, byte) {\n    var blob = new Blob([byte], { type: \"application/pdf\" });\n    var link = document.createElement('a');\n    link.href = window.URL.createObjectURL(blob);\n    var fileName = reportName;\n    link.download = fileName;\n    link.click();\n  };\n\n}\n\n\n\n\n","<p>\n    <mat-toolbar>\n        <span>\n            <mat-icon>list</mat-icon>Listagem de Alvarás\n        </span>\n    </mat-toolbar>\n</p>\n\n<div class=\"container\">\n\n    <form form #form=\"ngForm\" (submit)=\"consultarAlvaraPorNome()\">\n        <div class=\"row\">\n            <label for=\"inputNome\">Nome Empresa: </label>\n            <div class=\"col-md-6\">\n                <input type=\"text\" [(ngModel)]=\"nome\" name=\"nome\" class=\"form-control\" id=\"inputNome\">\n            </div>\n            <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-primary\">\n                    <i class=\"fa fa-search\"></i>Consultar\n                </button>\n            </div>\n        </div>\n    </form>\n\n    <br />\n\n    <div class=\"row\">\n        <div class=\"col-md-12 table-responsive\">\n            <table class=\"table table-condensed table-hover table-striped\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th>Id</th>\n                        <th>Tipo</th>\n                        <th>Nome Arq</th>\n                        <th>Nº Alvará</th>\n                        <th>Empresa</th>\n                        <th>CNPJ</th>\n                        <th>Emissão</th>\n                        <th>Vencimento</th>\n                        <th>Expira:</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let alv of lista\">\n                        <td>{{ alv.id }}</td>\n                        <td>{{ alv.tipoDoc }}</td>\n                        <td>{{ alv.nomeArquivo }}</td>\n                        <td>{{ alv.numeroAlvara }}</td>\n                        <td>{{ alv.nomeEmpresa }}</td>\n                        <td>{{ alv.cnpjEmpresa }}</td>\n                        <td>{{ alv.dataEmissao }}</td>\n                        <td>{{ alv.dataVencimento }}</td>\n                        <td>{{ alv.expira }}</td>\n                        <td>\n                            <a href=\"#\" (click)=\"baixar(alv)\">\n                                Download\n                                <mat-icon>get_app</mat-icon>\n                            </a>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <mat-paginator [length]=\"totalElementos\" [pageSize]=\"tamanho\" [pageSizeOptions]=\"pageSizeOptions\"\n                (page)=\"paginar($event)\">\n            </mat-paginator>\n\n        </div>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { AlvaraListaComponent } from './alvara-lista/alvara-lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'alvara', component: LayoutComponent, canActivate: [AuthGuard], children: [\n      { path: 'lista', component: AlvaraListaComponent },\n      { path: '', redirectTo: '/alvara/lista', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AlvaraRoutingModule { }\n","import { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AlvaraRoutingModule } from './alvara-routing.module';\nimport { AlvaraListaComponent } from './alvara-lista/alvara-lista.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\nimport { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [AlvaraListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AlvaraRoutingModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatTabsModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class AlvaraModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { LayoutComponent } from './layout/layout.component';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: '', redirectTo: 'login', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'alvara-app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TemplateModule } from './template/template.module';\nimport { AlvaraModule } from './alvara/alvara.module';\nimport { AlvaraService } from './alvara.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { AuthService } from './auth.service';\nimport { TokenInterceptor } from './token.interceptor';\nimport { PreferenciasModule } from './preferencias/preferencias.module';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LayoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TemplateModule,\n    AlvaraModule,\n    PreferenciasModule\n  ],\n  providers: [\n    AlvaraService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    const autenticado = this.authService.isAuthenticated();\n\n    if (autenticado) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\n\n\nconst API_URL_BASE = 'http://192.168.1.253:8085';\nconst API_URL_TOKEN = '/oauth/token';\nconst CLI_ID = 'my-angular-app';\nconst CLI_SECRET = '@321';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n\n  jwtHelper: JwtHelperService;\n\n  constructor(private http: HttpClient) {\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  obterTokenStorage() {\n    const tokenStr = localStorage.getItem('access_token');\n    if (tokenStr) {\n      const token = JSON.parse(tokenStr).access_token;\n      return token;\n    }\n    return null;\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.obterTokenStorage();\n    if (token) {\n      const expirado = this.jwtHelper.isTokenExpired(token);\n      return !expirado;\n    }\n    return false;\n  }\n\n  obterToken(username: string, password: string): Observable<any> {\n    const params = new HttpParams()\n      .set('username', username)\n      .set('password', password)\n      .set('grant_type', 'password');\n    const headers = {\n      'Authorization': 'Basic ' + btoa(CLI_ID + ':' + CLI_SECRET),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    return this.http.post(API_URL_BASE + API_URL_TOKEN, params.toString(), { headers });\n  }\n\n  encerrarSessao() {\n    localStorage.removeItem('access_token');\n  }\n\n  getUsuarioAutenticado() {\n    const token = this.obterTokenStorage();\n    if (token) {\n      const usuario = this.jwtHelper.decodeToken(token).user_name\n      return usuario;\n    }\n  }\n\n\n\n}\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport jQuery from 'jquery'\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n\n    (function ($) {\n      \"use strict\";\n\n      // Add active state to sidbar nav links\n      var path = window.location.href; // because the 'href' property of the DOM element is the absolute path\n      $(\"#layoutSidenav_nav .sb-sidenav a.nav-link\").each(function () {\n        if (this.href === path) {\n          $(this).addClass(\"active\");\n        }\n      });\n\n      // Toggle the side navigation\n      $(\"#sidebarToggle\").on(\"click\", function (e) {\n        e.preventDefault();\n        $(\"body\").toggleClass(\"sb-sidenav-toggled\");\n      });\n    })(jQuery);\n\n\n  }\n\n}\n","<app-cabecalho></app-cabecalho>\n<div id=\"layoutSidenav\">\n    <app-menu></app-menu>\n    <div id=\"layoutSidenav_content\">\n        <main>\n            <div class=\"container-fluid\">\n                <router-outlet></router-outlet>\n            </div>\n        </main>\n        <app-rodape></app-rodape>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  username: string;\n  password: string;\n  loginError: boolean;\n\n  erros: string[];\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  onSubmit() {\n    this.authService\n      .obterToken(this.username, this.password)\n      .subscribe(response => {\n        const access_token = JSON.stringify(response);\n        localStorage.setItem('access_token', access_token);\n        this.router.navigate(['/alvara/lista'])\n      }, errorResponse => {\n        this.loginError = true;\n      }\n      )\n  }\n\n}\n","<div class=\"bg-primary\">\n    <div id=\"layoutAuthentication\">\n        <div id=\"layoutAuthentication_content\">\n            <main>\n                <div class=\"container\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-lg-5\">\n                            <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                <div class=\"card-header\">\n                                    <h3 class=\"text-center font-weight-light m-4\">\n                                        Entrar\n                                    </h3>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"alert alert-danger\" *ngIf=\"loginError\">\n                                        Login e/ou Senha incorreto(a).\n                                    </div>\n                                    <form #loginForm=\"ngForm\" (submit)=\"onSubmit()\">\n                                        <div class=\"form-group\">\n                                            <label class=\"smal mb-1\"> Login </label>\n                                            <input type=\"text\" name=\"username\" [(ngModel)]=\"username\"\n                                                class=\"form-control py-4\" placeholder=\"Digite Seu Login\">\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"smal mb-1\"> Senha </label>\n                                            <input type=\"password\" name=\"password\" [(ngModel)]=\"password\"\n                                                class=\"form-control py-4\" placeholder=\"Digite Sua Senha \">\n                                        </div>\n                                        <div\n                                            class=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                            <button type=\"submit\" class=\"btn btn-primary\">\n                                                Enviar\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                                <div class=\"card-footer text-center\">\n                                    <div class=\"small\">\n                                        Efetuar Login\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AlvaraService } from 'src/app/alvara.service';\n\n@Component({\n  selector: 'app-preferencias-form',\n  templateUrl: './preferencias-form.component.html',\n  styleUrls: ['./preferencias-form.component.css']\n})\nexport class PreferenciasFormComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private service: AlvaraService,\n    private snackBar: MatSnackBar\n  ) { }\n\n\n  uploadPdf(event) {\n    const files = event.target.files;\n    if (files) {\n      let listaArquivos: File[] = [];\n      listaArquivos = files;\n      for (let index = 0; index < listaArquivos.length; index++) {\n        const pdf = listaArquivos[index];\n        const formData: FormData = new FormData();\n        formData.append(\"pdf\", pdf);\n        this.upload(formData);\n      }\n\n    }\n  }\n\n  upload(formData: FormData) {\n    this.service.uploadPdf(formData)\n      .subscribe(response => {\n        console.log(\"Sucesso UPLOAD \" + response);\n        this.snackBar.open(\"Sucesso UPLOAD!\", \"Sucesso!\", {\n          duration: 2000\n        });\n        this.router.navigate(['/alvara/lista']);\n      }, responseError => {\n        this.snackBar.open(\"Erro UPLOAD!\" + responseError, \"Erro!\", {\n          duration: 2000\n        });\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<mat-card>\n    <p>\n        <mat-toolbar>\n            <span>\n                <mat-icon>settings</mat-icon>Processar Arquivos PDF\n            </span>\n        </mat-toolbar>\n    </p>\n    <form>\n        <input type=\"file\" name=\"pdf\" multiple (change)=\"uploadPdf($event)\"\n            data-allowed-file-extensions='[\"pdf\"]' />\n    </form>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { PreferenciasFormComponent } from './preferencias-form/preferencias-form.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'preferencias', component: LayoutComponent, canActivate: [AuthGuard], children: [\n      { path: 'form', component: PreferenciasFormComponent },\n      { path: '', redirectTo: '/preferencias/form', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreferenciasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PreferenciasRoutingModule } from './preferencias-routing.module';\nimport { PreferenciasFormComponent } from './preferencias-form/preferencias-form.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [PreferenciasFormComponent],\n  imports: [\n    CommonModule,\n    PreferenciasRoutingModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatInputModule\n  ]\n})\nexport class PreferenciasModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cabecalho',\n  templateUrl: './cabecalho.component.html',\n  styleUrls: []\n})\nexport class CabecalhoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">Docs - WEB</a>\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" href=\"#\">\n        <i class=\"fas fa-bars\"></i>\n    </button>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: []\n})\nexport class MenuComponent implements OnInit {\n\n  usuarioLogado: string = \"Deslogado\";\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.usuarioLogado = this.authService.getUsuarioAutenticado();\n  }\n\n  logout() {\n    this.authService.encerrarSessao();\n    this.router.navigate(['/login']);\n  }\n\n\n}\n","<div id=\"layoutSidenav_nav\">\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\n        <div class=\"sb-sidenav-menu\">\n\n            <div class=\"nav\">\n\n                <a class=\"nav-link active\" routerLink=\"/alvara/lista\">\n                    <mat-icon>home</mat-icon>\n                    Início\n                </a>\n\n                <div class=\"sb-sidenav-menu-heading\">Version 1.0</div>\n                <a class=\"nav-link active\" routerLink=\"/alvara/lista\">\n                    <mat-icon>description</mat-icon>\n                    Alvarás\n                </a>\n\n                <a class=\"nav-link active\" routerLink=\"/preferencias/form\">\n                    <mat-icon>settings_applications</mat-icon>\n                    Preferências\n                </a>\n\n\n                <div class=\"sb-sidenav-menu-heading\">Logout</div>\n                <a class=\"nav-link collapsed\" (click)=\"logout()\" href=\"#\" data-toggle=\"collapse\"\n                    data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\n                    <div class=\"sb-nav-link-icon\">\n                        <i class=\"fas fa-sign-out-alt\"></i>\n                    </div>\n                    Sair\n                </a>\n\n            </div>\n\n        </div>\n        <div class=\"sb-sidenav-footer\">\n            <div class=\"small\">\n                <mat-icon>perm_identity</mat-icon>\n                Usuário logado:\n            </div>\n            {{ usuarioLogado }}\n        </div>\n    </nav>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rodape',\n  templateUrl: './rodape.component.html',\n  styleUrls: []\n})\nexport class RodapeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"py-4 bg-light mt-auto\">\n    <div class=\"container-fluid\">\n        <div class=\"d-flex align-items-center justify-content-between small\">\n            <div class=\"text-muted\">Copyright © Vandolima Contabilidade 2022</div>\n            <div>\n                <a href=\"https://www.linkedin.com/in/thiago-junior-amorim-de-melo-84246a149/\" target=\"_blank\">Criado por: Thiago JR</a>              \n            </div>\n        </div>\n    </div>\n</footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CabecalhoComponent } from './cabecalho/cabecalho.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { RodapeComponent } from './rodape/rodape.component';\n\n\nimport { RouterModule } from '@angular/router'\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n\n@NgModule({\n  declarations: [CabecalhoComponent, MenuComponent, RodapeComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    RouterModule\n    \n  ],\n  exports: [\n    CabecalhoComponent,\n    MenuComponent,\n    RodapeComponent\n  ]\n\n})\nexport class TemplateModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const tokenString = localStorage.getItem('access_token');\n    const url = request.url;\n    if (tokenString && !url.endsWith('/oauth/token')) {\n      const token = JSON.parse(tokenString);\n      const jwt = token.access_token;\n      request = request.clone({\n        setHeaders: {\n          Authorization: 'Bearer ' + jwt\n        }\n      })\n    }\n    return next.handle(request);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}