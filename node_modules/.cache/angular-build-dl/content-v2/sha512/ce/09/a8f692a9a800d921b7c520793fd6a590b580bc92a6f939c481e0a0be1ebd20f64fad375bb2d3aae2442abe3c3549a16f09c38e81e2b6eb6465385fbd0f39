{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/alvara.service.ts","webpack:///src/app/alvara/alvara-lista/alvara-lista.component.ts","webpack:///src/app/alvara/alvara-lista/alvara-lista.component.html","webpack:///src/app/alvara/alvara-routing.module.ts","webpack:///src/app/alvara/alvara.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/preferencias/preferencias-form/preferencias-form.component.ts","webpack:///src/app/preferencias/preferencias-form/preferencias-form.component.html","webpack:///src/app/preferencias/preferencias-routing.module.ts","webpack:///src/app/preferencias/preferencias.module.ts","webpack:///src/app/template/cabecalho/cabecalho.component.ts","webpack:///src/app/template/cabecalho/cabecalho.component.html","webpack:///src/app/template/menu/menu.component.ts","webpack:///src/app/template/menu/menu.component.html","webpack:///src/app/template/rodape/rodape.component.ts","webpack:///src/app/template/rodape/rodape.component.html","webpack:///src/app/template/template.module.ts","webpack:///src/app/token.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","API_URL","AlvaraService","http","formData","post","responseType","page","size","params","set","get","toString","nome","providedIn","AlvaraListaComponent","router","service","snackBar","mostraProgresso","totalElementos","pageSizeOptions","lista","colunas","listarArquivos","pagina","tamanho","listarTodos","subscribe","resposta","content","totalElements","number","length","open","duration","responseError","console","log","event","pageIndex","listarPorNome","errorResponse","alvara","sampleArr","base64ToArrayBuffer","pdf","saveByteArray","nomeArquivo","base64","binaryString","window","atob","binaryLen","bytes","Uint8Array","i","ascii","charCodeAt","reportName","byte","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","fileName","download","click","consultarAlvaraPorNome","paginar","selector","templateUrl","styleUrls","routes","path","component","canActivate","children","redirectTo","pathMatch","AlvaraRoutingModule","forChild","imports","AlvaraModule","declarations","AppRoutingModule","forRoot","AppComponent","title","AppModule","provide","useClass","multi","providers","bootstrap","AuthGuard","authService","next","state","autenticado","isAuthenticated","navigate","API_URL_BASE","API_URL_TOKEN","CLI_ID","CLI_SECRET","AuthService","jwtHelper","tokenStr","localStorage","getItem","token","JSON","parse","access_token","obterTokenStorage","expirado","isTokenExpired","username","password","headers","btoa","removeItem","usuario","decodeToken","user_name","LayoutComponent","$","location","each","addClass","on","preventDefault","toggleClass","LoginComponent","obterToken","response","stringify","setItem","loginError","onSubmit","PreferenciasFormComponent","files","target","listaArquivos","index","FormData","append","upload","uploadPdf","PreferenciasRoutingModule","PreferenciasModule","CabecalhoComponent","MenuComponent","usuarioLogado","getUsuarioAutenticado","encerrarSessao","logout","RodapeComponent","TemplateModule","TokenInterceptor","request","tokenString","url","endsWith","jwt","clone","setHeaders","Authorization","handle","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AlvaraPaginator } from './alvara/alvaraPaginator';\n\nconst API_URL = 'http://192.168.1.253:8085/api/alvara';\n\n@Injectable({ providedIn: 'root' })\nexport class AlvaraService {\n\n  constructor(private http: HttpClient) { }\n\n\n  uploadPdf(formData: FormData): Observable<any> {\n    return this.http.post(API_URL + '/pdf', formData, { responseType: 'blob' });\n  }\n\n\n  listarTodos(page, size): Observable<AlvaraPaginator> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size)\n    return this.http.get<any>(API_URL + \"?\" + params.toString());\n  }\n\n  listarPorNome(page, size, nome): Observable<AlvaraPaginator> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size)\n      .set(\"nome\", nome)\n    return this.http.get<any>(API_URL + \"/nome?\" + params.toString());\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlvaraService } from 'src/app/alvara.service';\nimport { Alvara } from '../alvara';\n\nimport { Router } from '@angular/router';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PageEvent } from '@angular/material/paginator';\n\n\n@Component({\n  selector: 'app-alvara-lista',\n  templateUrl: './alvara-lista.component.html',\n  styleUrls: ['./alvara-lista.component.css']\n})\nexport class AlvaraListaComponent implements OnInit {\n\n  mostraProgresso: boolean = true;\n\n  totalElementos = 0;\n  pagina;\n  tamanho;\n  pageSizeOptions: number[] = [10];\n  //\n  nome: string = \"\";\n\n\n  lista: Alvara[] = [];\n  colunas = ['id', 'tipoDoc', 'nomeArquivo',\n    'numeroAlvara', 'nomeEmpresa',\n    'cnpjEmpresa', 'dataEmissao', 'dataVencimento', 'expira', 'pdf'];\n\n  constructor(\n    private router: Router,\n    private service: AlvaraService,\n    private snackBar: MatSnackBar\n  ) { \n    \n  }\n\n  ngOnInit(): void {\n    this.listarArquivos();\n    this.mostraProgresso = true;\n  }\n\n\n  listarArquivos(pagina = 0, tamanho = 10) {\n    this.service.listarTodos(pagina, tamanho)\n      .subscribe(resposta => {\n        this.lista = resposta.content;\n        this.totalElementos = resposta.totalElements;\n        this.pagina = resposta.number;\n\n        if (this.lista.length == 0) {\n          this.snackBar.open(\"Lista Vazia!\", \"Info!\", {\n            duration: 2000\n          });\n        }\n      }, responseError => {\n\n        console.log(responseError);\n        this.snackBar.open(\"Erro ao Obter Lista!\", \"ERRO!\", {\n          duration: 2000\n        });\n\n      });\n  }\n\n  paginar(event: PageEvent) {\n    this.pagina = event.pageIndex;\n    this.listarArquivos(this.pagina, this.tamanho);\n  }\n\n\n  consultarAlvaraPorNome(pagina = 0, tamanho = 10) {\n    this.service.listarPorNome(pagina, tamanho, this.nome)\n      .subscribe(resposta => {\n        this.lista = resposta.content;\n        this.totalElementos = resposta.totalElements;\n        this.pagina = resposta.number;\n\n        if (this.lista.length == 0) {\n          this.snackBar.open(\"Lista Vazia!\", \"Info!\", {\n            duration: 2000\n          });\n        }\n      }, errorResponse => {\n        console.log(errorResponse);\n        this.snackBar.open(\"Erro ao Obter Lista!\", \"ERRO!\", {\n          duration: 2000\n        });\n\n      }\n      );\n  }\n\n  baixar(alvara: Alvara) {\n    var sampleArr = this.base64ToArrayBuffer(alvara.pdf);\n    this.saveByteArray(alvara.nomeArquivo, sampleArr);\n  }\n\n  base64ToArrayBuffer(base64) {\n    var binaryString = window.atob(base64);\n    var binaryLen = binaryString.length;\n    var bytes = new Uint8Array(binaryLen);\n    for (var i = 0; i < binaryLen; i++) {\n      var ascii = binaryString.charCodeAt(i);\n      bytes[i] = ascii;\n    }\n    return bytes;\n  }\n\n  saveByteArray(reportName, byte) {\n    var blob = new Blob([byte], { type: \"application/pdf\" });\n    var link = document.createElement('a');\n    link.href = window.URL.createObjectURL(blob);\n    var fileName = reportName;\n    link.download = fileName;\n    link.click();\n  };\n\n}\n\n\n\n\n","<p>\n    <mat-toolbar>\n        <span>\n            <mat-icon>list</mat-icon>Listagem de Alvarás\n        </span>\n    </mat-toolbar>\n</p>\n\n<div class=\"container\">\n\n    <form form #form=\"ngForm\" (submit)=\"consultarAlvaraPorNome()\">\n        <div class=\"row\">\n            <label for=\"inputNome\">Nome Empresa: </label>\n            <div class=\"col-md-6\">\n                <input type=\"text\" [(ngModel)]=\"nome\" name=\"nome\" class=\"form-control\" id=\"inputNome\">\n            </div>\n            <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-primary\">\n                    <i class=\"fa fa-search\"></i>Consultar\n                </button>\n            </div>\n        </div>\n    </form>\n\n    <br />\n\n    <div class=\"row\">\n        <div class=\"col-md-12 table-responsive\">\n            <table class=\"table table-condensed table-hover table-striped\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th>Id</th>\n                        <th>Tipo</th>\n                        <th>Nome Arq</th>\n                        <th>Nº Alvará</th>\n                        <th>Empresa</th>\n                        <th>CNPJ</th>\n                        <th>Emissão</th>\n                        <th>Vencimento</th>\n                        <th>Expira:</th>\n                        <th></th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let alv of lista\">\n                        <td>{{ alv.id }}</td>\n                        <td>{{ alv.tipoDoc }}</td>\n                        <td>{{ alv.nomeArquivo }}</td>\n                        <td>{{ alv.numeroAlvara }}</td>\n                        <td>{{ alv.nomeEmpresa }}</td>\n                        <td>{{ alv.cnpjEmpresa }}</td>\n                        <td>{{ alv.dataEmissao }}</td>\n                        <td>{{ alv.dataVencimento }}</td>\n                        <td>{{ alv.expira }}</td>\n                        <td>\n                            <a href=\"#\" (click)=\"baixar(alv)\">\n                                Download\n                                <mat-icon>get_app</mat-icon>\n                            </a>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <mat-paginator [length]=\"totalElementos\" [pageSize]=\"tamanho\" [pageSizeOptions]=\"pageSizeOptions\"\n                (page)=\"paginar($event)\">\n            </mat-paginator>\n\n        </div>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { AlvaraListaComponent } from './alvara-lista/alvara-lista.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'alvara', component: LayoutComponent, canActivate: [AuthGuard], children: [\n      { path: 'lista', component: AlvaraListaComponent },\n      { path: '', redirectTo: '/alvara/lista', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AlvaraRoutingModule { }\n","import { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AlvaraRoutingModule } from './alvara-routing.module';\nimport { AlvaraListaComponent } from './alvara-lista/alvara-lista.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\nimport { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [AlvaraListaComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AlvaraRoutingModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatTabsModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class AlvaraModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { LayoutComponent } from './layout/layout.component';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LayoutComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: '', redirectTo: 'login', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'alvara-app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TemplateModule } from './template/template.module';\nimport { AlvaraModule } from './alvara/alvara.module';\nimport { AlvaraService } from './alvara.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { AuthService } from './auth.service';\nimport { TokenInterceptor } from './token.interceptor';\nimport { PreferenciasModule } from './preferencias/preferencias.module';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LayoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TemplateModule,\n    AlvaraModule,\n    PreferenciasModule\n  ],\n  providers: [\n    AlvaraService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    const autenticado = this.authService.isAuthenticated();\n\n    if (autenticado) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n\n\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\n\n\nconst API_URL_BASE = 'http://192.168.1.253:8085';\nconst API_URL_TOKEN = '/oauth/token';\nconst CLI_ID = 'my-angular-app';\nconst CLI_SECRET = '@321';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n\n  jwtHelper: JwtHelperService;\n\n  constructor(private http: HttpClient) {\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  obterTokenStorage() {\n    const tokenStr = localStorage.getItem('access_token');\n    if (tokenStr) {\n      const token = JSON.parse(tokenStr).access_token;\n      return token;\n    }\n    return null;\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.obterTokenStorage();\n    if (token) {\n      const expirado = this.jwtHelper.isTokenExpired(token);\n      return !expirado;\n    }\n    return false;\n  }\n\n  obterToken(username: string, password: string): Observable<any> {\n    const params = new HttpParams()\n      .set('username', username)\n      .set('password', password)\n      .set('grant_type', 'password');\n    const headers = {\n      'Authorization': 'Basic ' + btoa(CLI_ID + ':' + CLI_SECRET),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    return this.http.post(API_URL_BASE + API_URL_TOKEN, params.toString(), { headers });\n  }\n\n  encerrarSessao() {\n    localStorage.removeItem('access_token');\n  }\n\n  getUsuarioAutenticado() {\n    const token = this.obterTokenStorage();\n    if (token) {\n      const usuario = this.jwtHelper.decodeToken(token).user_name\n      return usuario;\n    }\n  }\n\n\n\n}\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport jQuery from 'jquery'\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n\n    (function ($) {\n      \"use strict\";\n\n      // Add active state to sidbar nav links\n      var path = window.location.href; // because the 'href' property of the DOM element is the absolute path\n      $(\"#layoutSidenav_nav .sb-sidenav a.nav-link\").each(function () {\n        if (this.href === path) {\n          $(this).addClass(\"active\");\n        }\n      });\n\n      // Toggle the side navigation\n      $(\"#sidebarToggle\").on(\"click\", function (e) {\n        e.preventDefault();\n        $(\"body\").toggleClass(\"sb-sidenav-toggled\");\n      });\n    })(jQuery);\n\n\n  }\n\n}\n","<app-cabecalho></app-cabecalho>\n<div id=\"layoutSidenav\">\n    <app-menu></app-menu>\n    <div id=\"layoutSidenav_content\">\n        <main>\n            <div class=\"container-fluid\">\n                <router-outlet></router-outlet>\n            </div>\n        </main>\n        <app-rodape></app-rodape>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  username: string;\n  password: string;\n  loginError: boolean;\n\n  erros: string[];\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  onSubmit() {\n    this.authService\n      .obterToken(this.username, this.password)\n      .subscribe(response => {\n        const access_token = JSON.stringify(response);\n        localStorage.setItem('access_token', access_token);\n        this.router.navigate(['/alvara/lista'])\n      }, errorResponse => {\n        this.loginError = true;\n      }\n      )\n  }\n\n}\n","<div class=\"bg-primary\">\n    <div id=\"layoutAuthentication\">\n        <div id=\"layoutAuthentication_content\">\n            <main>\n                <div class=\"container\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-lg-5\">\n                            <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                <div class=\"card-header\">\n                                    <h3 class=\"text-center font-weight-light m-4\">\n                                        Entrar\n                                    </h3>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"alert alert-danger\" *ngIf=\"loginError\">\n                                        Login e/ou Senha incorreto(a).\n                                    </div>\n                                    <form #loginForm=\"ngForm\" (submit)=\"onSubmit()\">\n                                        <div class=\"form-group\">\n                                            <label class=\"smal mb-1\"> Login </label>\n                                            <input type=\"text\" name=\"username\" [(ngModel)]=\"username\"\n                                                class=\"form-control py-4\" placeholder=\"Digite Seu Login\">\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <label class=\"smal mb-1\"> Senha </label>\n                                            <input type=\"password\" name=\"password\" [(ngModel)]=\"password\"\n                                                class=\"form-control py-4\" placeholder=\"Digite Sua Senha \">\n                                        </div>\n                                        <div\n                                            class=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                            <button type=\"submit\" class=\"btn btn-primary\">\n                                                Enviar\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                                <div class=\"card-footer text-center\">\n                                    <div class=\"small\">\n                                        Efetuar Login\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AlvaraService } from 'src/app/alvara.service';\n\n@Component({\n  selector: 'app-preferencias-form',\n  templateUrl: './preferencias-form.component.html',\n  styleUrls: ['./preferencias-form.component.css']\n})\nexport class PreferenciasFormComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private service: AlvaraService,\n    private snackBar: MatSnackBar\n  ) { }\n\n\n  uploadPdf(event) {\n    const files = event.target.files;\n    if (files) {\n      let listaArquivos: File[] = [];\n      listaArquivos = files;\n      for (let index = 0; index < listaArquivos.length; index++) {\n        const pdf = listaArquivos[index];\n        const formData: FormData = new FormData();\n        formData.append(\"pdf\", pdf);\n        this.upload(formData);\n      }\n\n    }\n  }\n\n  upload(formData: FormData) {\n    this.service.uploadPdf(formData)\n      .subscribe(response => {\n        console.log(\"Sucesso UPLOAD \" + response);\n        this.snackBar.open(\"Sucesso UPLOAD!\", \"Sucesso!\", {\n          duration: 2000\n        });\n        this.router.navigate(['/alvara/lista']);\n      }, responseError => {\n        this.snackBar.open(\"Erro UPLOAD!\" + responseError, \"Erro!\", {\n          duration: 2000\n        });\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<mat-card>\n    <p>\n        <mat-toolbar>\n            <span>\n                <mat-icon>settings</mat-icon>Processar Arquivos PDF\n            </span>\n        </mat-toolbar>\n    </p>\n    <form>\n        <input type=\"file\" name=\"pdf\" multiple (change)=\"uploadPdf($event)\"\n            data-allowed-file-extensions='[\"pdf\"]' />\n    </form>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { PreferenciasFormComponent } from './preferencias-form/preferencias-form.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'preferencias', component: LayoutComponent, canActivate: [AuthGuard], children: [\n      { path: 'form', component: PreferenciasFormComponent },\n      { path: '', redirectTo: '/preferencias/form', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PreferenciasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PreferenciasRoutingModule } from './preferencias-routing.module';\nimport { PreferenciasFormComponent } from './preferencias-form/preferencias-form.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [PreferenciasFormComponent],\n  imports: [\n    CommonModule,\n    PreferenciasRoutingModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatInputModule\n  ]\n})\nexport class PreferenciasModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cabecalho',\n  templateUrl: './cabecalho.component.html',\n  styleUrls: []\n})\nexport class CabecalhoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">Docs - WEB</a>\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" href=\"#\">\n        <i class=\"fas fa-bars\"></i>\n    </button>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: []\n})\nexport class MenuComponent implements OnInit {\n\n  usuarioLogado: string = \"Deslogado\";\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.usuarioLogado = this.authService.getUsuarioAutenticado();\n  }\n\n  logout() {\n    this.authService.encerrarSessao();\n    this.router.navigate(['/login']);\n  }\n\n\n}\n","<div id=\"layoutSidenav_nav\">\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\n        <div class=\"sb-sidenav-menu\">\n\n            <div class=\"nav\">\n\n                <a class=\"nav-link active\" routerLink=\"/alvara/lista\">\n                    <mat-icon>home</mat-icon>\n                    Início\n                </a>\n\n                <div class=\"sb-sidenav-menu-heading\">Version 1.0</div>\n                <a class=\"nav-link active\" routerLink=\"/alvara/lista\">\n                    <mat-icon>description</mat-icon>\n                    Alvarás\n                </a>\n\n                <a class=\"nav-link active\" routerLink=\"/preferencias/form\">\n                    <mat-icon>settings_applications</mat-icon>\n                    Preferências\n                </a>\n\n\n                <div class=\"sb-sidenav-menu-heading\">Logout</div>\n                <a class=\"nav-link collapsed\" (click)=\"logout()\" href=\"#\" data-toggle=\"collapse\"\n                    data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\n                    <div class=\"sb-nav-link-icon\">\n                        <i class=\"fas fa-sign-out-alt\"></i>\n                    </div>\n                    Sair\n                </a>\n\n            </div>\n\n        </div>\n        <div class=\"sb-sidenav-footer\">\n            <div class=\"small\">\n                <mat-icon>perm_identity</mat-icon>\n                Usuário logado:\n            </div>\n            {{ usuarioLogado }}\n        </div>\n    </nav>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rodape',\n  templateUrl: './rodape.component.html',\n  styleUrls: []\n})\nexport class RodapeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"py-4 bg-light mt-auto\">\n    <div class=\"container-fluid\">\n        <div class=\"d-flex align-items-center justify-content-between small\">\n            <div class=\"text-muted\">Copyright © Vandolima Contabilidade 2022</div>\n            <div>\n                <a href=\"https://www.linkedin.com/in/thiago-junior-amorim-de-melo-84246a149/\" target=\"_blank\">Criado por: Thiago JR</a>              \n            </div>\n        </div>\n    </div>\n</footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CabecalhoComponent } from './cabecalho/cabecalho.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { RodapeComponent } from './rodape/rodape.component';\n\n\nimport { RouterModule } from '@angular/router'\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n\n@NgModule({\n  declarations: [CabecalhoComponent, MenuComponent, RodapeComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    RouterModule\n    \n  ],\n  exports: [\n    CabecalhoComponent,\n    MenuComponent,\n    RodapeComponent\n  ]\n\n})\nexport class TemplateModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const tokenString = localStorage.getItem('access_token');\n    const url = request.url;\n    if (tokenString && !url.endsWith('/oauth/token')) {\n      const token = JSON.parse(tokenString);\n      const jwt = token.access_token;\n      request = request.clone({\n        setHeaders: {\n          Authorization: 'Bearer ' + jwt\n        }\n      })\n    }\n    return next.handle(request);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}